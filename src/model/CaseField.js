/*
 * Swagger Payroll API - OpenAPI 3.0
 * This is a base Payrolling API Gateway Server based on Ason Backend.  Some useful links: - [Ason portal](http://ason.ch/)
 *
 * OpenAPI spec version: 1.0.11
 * Contact: mikolaj.sienko@esgroup.ch
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CaseFieldDateType} from './CaseFieldDateType';
import {CaseFieldTimeType} from './CaseFieldTimeType';
import {CaseFieldTimeUnit} from './CaseFieldTimeUnit';
import {CaseFieldValue} from './CaseFieldValue';
import {ValueType} from './ValueType';

/**
 * The CaseField model module.
 * @module model/CaseField
 * @version 1.0.11
 */
export class CaseField {
  /**
   * Constructs a new <code>CaseField</code>.
   * @alias module:model/CaseField
   * @class
   * @param name {String} The case field name (immutable)
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>CaseField</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CaseField} obj Optional instance to populate.
   * @return {module:model/CaseField} The populated <code>CaseField</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CaseField();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('valueType'))
        obj.valueType = ValueType.constructFromObject(data['valueType']);
      if (data.hasOwnProperty('timeType'))
        obj.timeType = CaseFieldTimeType.constructFromObject(data['timeType']);
      if (data.hasOwnProperty('timeUnit'))
        obj.timeUnit = CaseFieldTimeUnit.constructFromObject(data['timeUnit']);
      if (data.hasOwnProperty('startDateType'))
        obj.startDateType = CaseFieldDateType.constructFromObject(data['startDateType']);
      if (data.hasOwnProperty('endDateType'))
        obj.endDateType = CaseFieldDateType.constructFromObject(data['endDateType']);
      if (data.hasOwnProperty('optional'))
        obj.optional = ApiClient.convertToType(data['optional'], 'Boolean');
      if (data.hasOwnProperty('order'))
        obj.order = ApiClient.convertToType(data['order'], 'Number');
      if (data.hasOwnProperty('value'))
        obj.value = CaseFieldValue.constructFromObject(data['value']);
    }
    return obj;
  }
}

/**
 * The case field name (immutable)
 * @member {String} name
 */
CaseField.prototype.name = undefined;

/**
 * The case field description
 * @member {String} description
 */
CaseField.prototype.description = undefined;

/**
 * @member {module:model/ValueType} valueType
 */
CaseField.prototype.valueType = undefined;

/**
 * @member {module:model/CaseFieldTimeType} timeType
 */
CaseField.prototype.timeType = undefined;

/**
 * @member {module:model/CaseFieldTimeUnit} timeUnit
 */
CaseField.prototype.timeUnit = undefined;

/**
 * @member {module:model/CaseFieldDateType} startDateType
 */
CaseField.prototype.startDateType = undefined;

/**
 * @member {module:model/CaseFieldDateType} endDateType
 */
CaseField.prototype.endDateType = undefined;

/**
 * Optional case field
 * @member {Boolean} optional
 */
CaseField.prototype.optional = undefined;

/**
 * The case field order
 * @member {Number} order
 */
CaseField.prototype.order = undefined;

/**
 * @member {module:model/CaseFieldValue} value
 */
CaseField.prototype.value = undefined;

