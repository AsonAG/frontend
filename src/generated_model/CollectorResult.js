/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CollectType} from './CollectType';
import {ObjectStatus} from './ObjectStatus';
import {ValueType} from './ValueType';

/**
 * The CollectorResult model module.
 * @module model/CollectorResult
 * @version 1
 */
export class CollectorResult {
  /**
   * Constructs a new <code>CollectorResult</code>.
   * The collector result API object
   * @alias module:model/CollectorResult
   * @class
   * @param collectorId {Number} The collector id (immutable)
   * @param collectorName {String} The collector name (immutable)
   * @param collectType {module:model/CollectType} 
   * @param valueType {module:model/ValueType} 
   * @param value {Number} The collector result value (immutable)
   * @param start {Date} The starting date for the value (immutable)
   * @param end {Date} The ending date for the value (immutable)
   */
  constructor(collectorId, collectorName, collectType, valueType, value, start, end) {
    this.collectorId = collectorId;
    this.collectorName = collectorName;
    this.collectType = collectType;
    this.valueType = valueType;
    this.value = value;
    this.start = start;
    this.end = end;
  }

  /**
   * Constructs a <code>CollectorResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CollectorResult} obj Optional instance to populate.
   * @return {module:model/CollectorResult} The populated <code>CollectorResult</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CollectorResult();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('payrollResultId'))
        obj.payrollResultId = ApiClient.convertToType(data['payrollResultId'], 'Number');
      if (data.hasOwnProperty('collectorId'))
        obj.collectorId = ApiClient.convertToType(data['collectorId'], 'Number');
      if (data.hasOwnProperty('collectorName'))
        obj.collectorName = ApiClient.convertToType(data['collectorName'], 'String');
      if (data.hasOwnProperty('collectorNameLocalizations'))
        obj.collectorNameLocalizations = ApiClient.convertToType(data['collectorNameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('collectType'))
        obj.collectType = CollectType.constructFromObject(data['collectType']);
      if (data.hasOwnProperty('valueType'))
        obj.valueType = ValueType.constructFromObject(data['valueType']);
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'Number');
      if (data.hasOwnProperty('start'))
        obj.start = ApiClient.convertToType(data['start'], 'Date');
      if (data.hasOwnProperty('end'))
        obj.end = ApiClient.convertToType(data['end'], 'Date');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
CollectorResult.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
CollectorResult.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
CollectorResult.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
CollectorResult.prototype.updated = undefined;

/**
 * The payroll result id (immutable)
 * @member {Number} payrollResultId
 */
CollectorResult.prototype.payrollResultId = undefined;

/**
 * The collector id (immutable)
 * @member {Number} collectorId
 */
CollectorResult.prototype.collectorId = undefined;

/**
 * The collector name (immutable)
 * @member {String} collectorName
 */
CollectorResult.prototype.collectorName = undefined;

/**
 * The localized collector names (immutable)
 * @member {Object.<String, String>} collectorNameLocalizations
 */
CollectorResult.prototype.collectorNameLocalizations = undefined;

/**
 * @member {module:model/CollectType} collectType
 */
CollectorResult.prototype.collectType = undefined;

/**
 * @member {module:model/ValueType} valueType
 */
CollectorResult.prototype.valueType = undefined;

/**
 * The collector result value (immutable)
 * @member {Number} value
 */
CollectorResult.prototype.value = undefined;

/**
 * The starting date for the value (immutable)
 * @member {Date} start
 */
CollectorResult.prototype.start = undefined;

/**
 * The ending date for the value (immutable)
 * @member {Date} end
 */
CollectorResult.prototype.end = undefined;

/**
 * The result tags
 * @member {Array.<String>} tags
 */
CollectorResult.prototype.tags = undefined;

/**
 * The result attributes (immutable)
 * @member {Object.<String, Object>} attributes
 */
CollectorResult.prototype.attributes = undefined;

