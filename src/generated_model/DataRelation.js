/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';

/**
 * The DataRelation model module.
 * @module model/DataRelation
 * @version 1
 */
export class DataRelation {
  /**
   * Constructs a new <code>DataRelation</code>.
   * Represents a data relation in a DataTable
   * @alias module:model/DataRelation
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DataRelation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataRelation} obj Optional instance to populate.
   * @return {module:model/DataRelation} The populated <code>DataRelation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DataRelation();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('parentTable'))
        obj.parentTable = ApiClient.convertToType(data['parentTable'], 'String');
      if (data.hasOwnProperty('parentColumn'))
        obj.parentColumn = ApiClient.convertToType(data['parentColumn'], 'String');
      if (data.hasOwnProperty('childTable'))
        obj.childTable = ApiClient.convertToType(data['childTable'], 'String');
      if (data.hasOwnProperty('childColumn'))
        obj.childColumn = ApiClient.convertToType(data['childColumn'], 'String');
    }
    return obj;
  }
}

/**
 * Gets or sets the relation name
 * @member {String} name
 */
DataRelation.prototype.name = undefined;

/**
 * Gets or sets the relation parent table name
 * @member {String} parentTable
 */
DataRelation.prototype.parentTable = undefined;

/**
 * Gets or sets the relation parent column names
 * @member {String} parentColumn
 */
DataRelation.prototype.parentColumn = undefined;

/**
 * Gets or sets the relation child table name
 * @member {String} childTable
 */
DataRelation.prototype.childTable = undefined;

/**
 * Gets or sets the relation child column names
 * @member {String} childColumn
 */
DataRelation.prototype.childColumn = undefined;

