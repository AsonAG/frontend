/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {ActionIssueInfo} from './ActionIssueInfo';
import {ActionParameterInfo} from './ActionParameterInfo';
import {ActionSource} from './ActionSource';
import {FunctionType} from './FunctionType';

/**
 * The ActionInfo model module.
 * @module model/ActionInfo
 * @version 1
 */
export class ActionInfo {
  /**
   * Constructs a new <code>ActionInfo</code>.
   * Action info
   * @alias module:model/ActionInfo
   * @class
   * @param name {String} The action name
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>ActionInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ActionInfo} obj Optional instance to populate.
   * @return {module:model/ActionInfo} The populated <code>ActionInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ActionInfo();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('functionType'))
        obj.functionType = FunctionType.constructFromObject(data['functionType']);
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('categories'))
        obj.categories = ApiClient.convertToType(data['categories'], ['String']);
      if (data.hasOwnProperty('source'))
        obj.source = ActionSource.constructFromObject(data['source']);
      if (data.hasOwnProperty('parameters'))
        obj.parameters = ApiClient.convertToType(data['parameters'], [ActionParameterInfo]);
      if (data.hasOwnProperty('issues'))
        obj.issues = ApiClient.convertToType(data['issues'], [ActionIssueInfo]);
    }
    return obj;
  }
}

/**
 * The action name
 * @member {String} name
 */
ActionInfo.prototype.name = undefined;

/**
 * @member {module:model/FunctionType} functionType
 */
ActionInfo.prototype.functionType = undefined;

/**
 * The action namespace
 * @member {String} namespace
 */
ActionInfo.prototype.namespace = undefined;

/**
 * The action description
 * @member {String} description
 */
ActionInfo.prototype.description = undefined;

/**
 * The action categories
 * @member {Array.<String>} categories
 */
ActionInfo.prototype.categories = undefined;

/**
 * @member {module:model/ActionSource} source
 */
ActionInfo.prototype.source = undefined;

/**
 * The action parameters
 * @member {Array.<module:model/ActionParameterInfo>} parameters
 */
ActionInfo.prototype.parameters = undefined;

/**
 * The action issues
 * @member {Array.<module:model/ActionIssueInfo>} issues
 */
ActionInfo.prototype.issues = undefined;

