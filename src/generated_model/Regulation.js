/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {ObjectStatus} from './ObjectStatus';

/**
 * The Regulation model module.
 * @module model/Regulation
 * @version 1
 */
export class Regulation {
  /**
   * Constructs a new <code>Regulation</code>.
   * The payroll regulation API object
   * @alias module:model/Regulation
   * @class
   * @param name {String} The regulation name
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>Regulation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Regulation} obj Optional instance to populate.
   * @return {module:model/Regulation} The populated <code>Regulation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Regulation();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('nameLocalizations'))
        obj.nameLocalizations = ApiClient.convertToType(data['nameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'Number');
      if (data.hasOwnProperty('sharedRegulation'))
        obj.sharedRegulation = ApiClient.convertToType(data['sharedRegulation'], 'Boolean');
      if (data.hasOwnProperty('validFrom'))
        obj.validFrom = ApiClient.convertToType(data['validFrom'], 'Date');
      if (data.hasOwnProperty('owner'))
        obj.owner = ApiClient.convertToType(data['owner'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('descriptionLocalizations'))
        obj.descriptionLocalizations = ApiClient.convertToType(data['descriptionLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('baseRegulations'))
        obj.baseRegulations = ApiClient.convertToType(data['baseRegulations'], ['String']);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
Regulation.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
Regulation.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
Regulation.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
Regulation.prototype.updated = undefined;

/**
 * The regulation name
 * @member {String} name
 */
Regulation.prototype.name = undefined;

/**
 * The localized regulation names
 * @member {Object.<String, String>} nameLocalizations
 */
Regulation.prototype.nameLocalizations = undefined;

/**
 * The regulation version, unique per regulation name
 * @member {Number} version
 */
Regulation.prototype.version = undefined;

/**
 * Shared regulation (immutable)
 * @member {Boolean} sharedRegulation
 */
Regulation.prototype.sharedRegulation = undefined;

/**
 * The date the regulation to be in force, anytime if undefined
 * @member {Date} validFrom
 */
Regulation.prototype.validFrom = undefined;

/**
 * The regulation owner
 * @member {String} owner
 */
Regulation.prototype.owner = undefined;

/**
 * The regulation description
 * @member {String} description
 */
Regulation.prototype.description = undefined;

/**
 * The localized regulation descriptions
 * @member {Object.<String, String>} descriptionLocalizations
 */
Regulation.prototype.descriptionLocalizations = undefined;

/**
 * Required base regulations
 * @member {Array.<String>} baseRegulations
 */
Regulation.prototype.baseRegulations = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
Regulation.prototype.attributes = undefined;

