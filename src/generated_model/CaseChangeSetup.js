/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {CaseSetup} from './CaseSetup';
import {CaseValidationIssue} from './CaseValidationIssue';

/**
 * The CaseChangeSetup model module.
 * @module model/CaseChangeSetup
 * @version 1
 */
export class CaseChangeSetup {
  /**
   * Constructs a new <code>CaseChangeSetup</code>.
   * Case change setup
   * @alias module:model/CaseChangeSetup
   * @class
   * @param userId {Number} The change user id
   * @param _case {module:model/CaseSetup} 
   */
  constructor(userId, _case) {
    this.userId = userId;
    this._case = _case;
  }

  /**
   * Constructs a <code>CaseChangeSetup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CaseChangeSetup} obj Optional instance to populate.
   * @return {module:model/CaseChangeSetup} The populated <code>CaseChangeSetup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CaseChangeSetup();
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'Number');
      if (data.hasOwnProperty('employeeId'))
        obj.employeeId = ApiClient.convertToType(data['employeeId'], 'Number');
      if (data.hasOwnProperty('divisionId'))
        obj.divisionId = ApiClient.convertToType(data['divisionId'], 'Number');
      if (data.hasOwnProperty('cancellationId'))
        obj.cancellationId = ApiClient.convertToType(data['cancellationId'], 'Number');
      if (data.hasOwnProperty('forecast'))
        obj.forecast = ApiClient.convertToType(data['forecast'], 'String');
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('reason'))
        obj.reason = ApiClient.convertToType(data['reason'], 'String');
      if (data.hasOwnProperty('case'))
        obj._case = CaseSetup.constructFromObject(data['case']);
      if (data.hasOwnProperty('issues'))
        obj.issues = ApiClient.convertToType(data['issues'], [CaseValidationIssue]);
    }
    return obj;
  }
}

/**
 * The change user id
 * @member {Number} userId
 */
CaseChangeSetup.prototype.userId = undefined;

/**
 * The employee id, mandatory for employee case changes (immutable)
 * @member {Number} employeeId
 */
CaseChangeSetup.prototype.employeeId = undefined;

/**
 * The division id (immutable)  If present, this values overrides all case value divisions  Ason.Payroll.Api.Model.CaseValue.DivisionId
 * @member {Number} divisionId
 */
CaseChangeSetup.prototype.divisionId = undefined;

/**
 * The case to cancel, root case name specifies the target case
 * @member {Number} cancellationId
 */
CaseChangeSetup.prototype.cancellationId = undefined;

/**
 * The forecast name
 * @member {String} forecast
 */
CaseChangeSetup.prototype.forecast = undefined;

/**
 * Case change created date
 * @member {Date} created
 */
CaseChangeSetup.prototype.created = undefined;

/**
 * The change reason
 * @member {String} reason
 */
CaseChangeSetup.prototype.reason = undefined;

/**
 * @member {module:model/CaseSetup} _case
 */
CaseChangeSetup.prototype._case = undefined;

/**
 * The case validation issues
 * @member {Array.<module:model/CaseValidationIssue>} issues
 */
CaseChangeSetup.prototype.issues = undefined;

