/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ObjectStatus} from './ObjectStatus';

/**
 * The Task model module.
 * @module model/Task
 * @version 1
 */
export class Task {
  /**
   * Constructs a new <code>Task</code>.
   * The task API object
   * @alias module:model/Task
   * @class
   * @param name {String} The task name (immutable)
   * @param instruction {String} The task instruction
   * @param scheduledUserId {Number} The scheduled user id
   * @param scheduled {Date} The task schedule date
   */
  constructor(name, instruction, scheduledUserId, scheduled) {
    this.name = name;
    this.instruction = instruction;
    this.scheduledUserId = scheduledUserId;
    this.scheduled = scheduled;
  }

  /**
   * Constructs a <code>Task</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Task} obj Optional instance to populate.
   * @return {module:model/Task} The populated <code>Task</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Task();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('nameLocalizations'))
        obj.nameLocalizations = ApiClient.convertToType(data['nameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('category'))
        obj.category = ApiClient.convertToType(data['category'], 'String');
      if (data.hasOwnProperty('instruction'))
        obj.instruction = ApiClient.convertToType(data['instruction'], 'String');
      if (data.hasOwnProperty('scheduledUserId'))
        obj.scheduledUserId = ApiClient.convertToType(data['scheduledUserId'], 'Number');
      if (data.hasOwnProperty('scheduled'))
        obj.scheduled = ApiClient.convertToType(data['scheduled'], 'Date');
      if (data.hasOwnProperty('completedUserId'))
        obj.completedUserId = ApiClient.convertToType(data['completedUserId'], 'Number');
      if (data.hasOwnProperty('completed'))
        obj.completed = ApiClient.convertToType(data['completed'], 'Date');
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
Task.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
Task.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
Task.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
Task.prototype.updated = undefined;

/**
 * The task name (immutable)
 * @member {String} name
 */
Task.prototype.name = undefined;

/**
 * The localized task names (immutable)
 * @member {Object.<String, String>} nameLocalizations
 */
Task.prototype.nameLocalizations = undefined;

/**
 * The task category
 * @member {String} category
 */
Task.prototype.category = undefined;

/**
 * The task instruction
 * @member {String} instruction
 */
Task.prototype.instruction = undefined;

/**
 * The scheduled user id
 * @member {Number} scheduledUserId
 */
Task.prototype.scheduledUserId = undefined;

/**
 * The task schedule date
 * @member {Date} scheduled
 */
Task.prototype.scheduled = undefined;

/**
 * The completed user id
 * @member {Number} completedUserId
 */
Task.prototype.completedUserId = undefined;

/**
 * The task completed date
 * @member {Date} completed
 */
Task.prototype.completed = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
Task.prototype.attributes = undefined;

