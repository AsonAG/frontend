/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CalendarConfiguration} from './CalendarConfiguration';
import {ObjectStatus} from './ObjectStatus';
import {RetroTimeType} from './RetroTimeType';

/**
 * The Payrun model module.
 * @module model/Payrun
 * @version 1
 */
export class Payrun {
  /**
   * Constructs a new <code>Payrun</code>.
   * The payrun API object
   * @alias module:model/Payrun
   * @class
   * @param name {String} The payrun name (immutable)
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>Payrun</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Payrun} obj Optional instance to populate.
   * @return {module:model/Payrun} The populated <code>Payrun</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Payrun();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('payrollId'))
        obj.payrollId = ApiClient.convertToType(data['payrollId'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('defaultReason'))
        obj.defaultReason = ApiClient.convertToType(data['defaultReason'], 'String');
      if (data.hasOwnProperty('defaultReasonLocalizations'))
        obj.defaultReasonLocalizations = ApiClient.convertToType(data['defaultReasonLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('startExpression'))
        obj.startExpression = ApiClient.convertToType(data['startExpression'], 'String');
      if (data.hasOwnProperty('employeeAvailableExpression'))
        obj.employeeAvailableExpression = ApiClient.convertToType(data['employeeAvailableExpression'], 'String');
      if (data.hasOwnProperty('employeeStartExpression'))
        obj.employeeStartExpression = ApiClient.convertToType(data['employeeStartExpression'], 'String');
      if (data.hasOwnProperty('employeeEndExpression'))
        obj.employeeEndExpression = ApiClient.convertToType(data['employeeEndExpression'], 'String');
      if (data.hasOwnProperty('wageTypeAvailableExpression'))
        obj.wageTypeAvailableExpression = ApiClient.convertToType(data['wageTypeAvailableExpression'], 'String');
      if (data.hasOwnProperty('endExpression'))
        obj.endExpression = ApiClient.convertToType(data['endExpression'], 'String');
      if (data.hasOwnProperty('retroTimeType'))
        obj.retroTimeType = RetroTimeType.constructFromObject(data['retroTimeType']);
      if (data.hasOwnProperty('calendar'))
        obj.calendar = CalendarConfiguration.constructFromObject(data['calendar']);
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
Payrun.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
Payrun.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
Payrun.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
Payrun.prototype.updated = undefined;

/**
 * The payroll id (immutable)
 * @member {Number} payrollId
 */
Payrun.prototype.payrollId = undefined;

/**
 * The payrun name (immutable)
 * @member {String} name
 */
Payrun.prototype.name = undefined;

/**
 * The default payrun reason
 * @member {String} defaultReason
 */
Payrun.prototype.defaultReason = undefined;

/**
 * The localized default payrun reasons
 * @member {Object.<String, String>} defaultReasonLocalizations
 */
Payrun.prototype.defaultReasonLocalizations = undefined;

/**
 * The payrun start expression
 * @member {String} startExpression
 */
Payrun.prototype.startExpression = undefined;

/**
 * The employee available expression
 * @member {String} employeeAvailableExpression
 */
Payrun.prototype.employeeAvailableExpression = undefined;

/**
 * The expression evaluates the employee start
 * @member {String} employeeStartExpression
 */
Payrun.prototype.employeeStartExpression = undefined;

/**
 * The expression evaluates the employee end
 * @member {String} employeeEndExpression
 */
Payrun.prototype.employeeEndExpression = undefined;

/**
 * The wage type available expression
 * @member {String} wageTypeAvailableExpression
 */
Payrun.prototype.wageTypeAvailableExpression = undefined;

/**
 * The payrun end expression
 * @member {String} endExpression
 */
Payrun.prototype.endExpression = undefined;

/**
 * @member {module:model/RetroTimeType} retroTimeType
 */
Payrun.prototype.retroTimeType = undefined;

/**
 * @member {module:model/CalendarConfiguration} calendar
 */
Payrun.prototype.calendar = undefined;

