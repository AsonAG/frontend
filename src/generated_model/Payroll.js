/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {CalendarCalculationMode} from './CalendarCalculationMode';
import {ClusterSet} from './ClusterSet';
import {ObjectStatus} from './ObjectStatus';

/**
 * The Payroll model module.
 * @module model/Payroll
 * @version 1
 */
export class Payroll {
  /**
   * Constructs a new <code>Payroll</code>.
   * The payroll API object
   * @alias module:model/Payroll
   * @class
   * @param name {String} The payroll name
   * @param divisionId {Number} The division id (immutable)
   */
  constructor(name, divisionId) {
    this.name = name;
    this.divisionId = divisionId;
  }

  /**
   * Constructs a <code>Payroll</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Payroll} obj Optional instance to populate.
   * @return {module:model/Payroll} The populated <code>Payroll</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Payroll();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('nameLocalizations'))
        obj.nameLocalizations = ApiClient.convertToType(data['nameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('descriptionLocalizations'))
        obj.descriptionLocalizations = ApiClient.convertToType(data['descriptionLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('divisionId'))
        obj.divisionId = ApiClient.convertToType(data['divisionId'], 'Number');
      if (data.hasOwnProperty('calendarCalculationMode'))
        obj.calendarCalculationMode = CalendarCalculationMode.constructFromObject(data['calendarCalculationMode']);
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'Number');
      if (data.hasOwnProperty('clusterSetCase'))
        obj.clusterSetCase = ApiClient.convertToType(data['clusterSetCase'], 'String');
      if (data.hasOwnProperty('clusterSetCaseField'))
        obj.clusterSetCaseField = ApiClient.convertToType(data['clusterSetCaseField'], 'String');
      if (data.hasOwnProperty('clusterSetCollector'))
        obj.clusterSetCollector = ApiClient.convertToType(data['clusterSetCollector'], 'String');
      if (data.hasOwnProperty('clusterSetCollectorRetro'))
        obj.clusterSetCollectorRetro = ApiClient.convertToType(data['clusterSetCollectorRetro'], 'String');
      if (data.hasOwnProperty('clusterSetWageType'))
        obj.clusterSetWageType = ApiClient.convertToType(data['clusterSetWageType'], 'String');
      if (data.hasOwnProperty('clusterSetWageTypeRetro'))
        obj.clusterSetWageTypeRetro = ApiClient.convertToType(data['clusterSetWageTypeRetro'], 'String');
      if (data.hasOwnProperty('clusterSetCaseValue'))
        obj.clusterSetCaseValue = ApiClient.convertToType(data['clusterSetCaseValue'], 'String');
      if (data.hasOwnProperty('clusterSetWageTypePeriod'))
        obj.clusterSetWageTypePeriod = ApiClient.convertToType(data['clusterSetWageTypePeriod'], 'String');
      if (data.hasOwnProperty('clusterSets'))
        obj.clusterSets = ApiClient.convertToType(data['clusterSets'], [ClusterSet]);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
Payroll.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
Payroll.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
Payroll.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
Payroll.prototype.updated = undefined;

/**
 * The payroll name
 * @member {String} name
 */
Payroll.prototype.name = undefined;

/**
 * The localized payroll names
 * @member {Object.<String, String>} nameLocalizations
 */
Payroll.prototype.nameLocalizations = undefined;

/**
 * The payroll description
 * @member {String} description
 */
Payroll.prototype.description = undefined;

/**
 * The localized payroll descriptions
 * @member {Object.<String, String>} descriptionLocalizations
 */
Payroll.prototype.descriptionLocalizations = undefined;

/**
 * The division id (immutable)
 * @member {Number} divisionId
 */
Payroll.prototype.divisionId = undefined;

/**
 * @member {module:model/CalendarCalculationMode} calendarCalculationMode
 */
Payroll.prototype.calendarCalculationMode = undefined;

/**
 * The ISO 3166-1 country code, 0 for undefined
 * @member {Number} country
 */
Payroll.prototype.country = undefined;

/**
 * The case cluster set (undefined: all)
 * @member {String} clusterSetCase
 */
Payroll.prototype.clusterSetCase = undefined;

/**
 * The case field cluster set (undefined: all)
 * @member {String} clusterSetCaseField
 */
Payroll.prototype.clusterSetCaseField = undefined;

/**
 * The collector cluster set (undefined: all)
 * @member {String} clusterSetCollector
 */
Payroll.prototype.clusterSetCollector = undefined;

/**
 * The collector cluster set for retro payrun jobs (undefined: all)
 * @member {String} clusterSetCollectorRetro
 */
Payroll.prototype.clusterSetCollectorRetro = undefined;

/**
 * The wage type cluster set (undefined: all)
 * @member {String} clusterSetWageType
 */
Payroll.prototype.clusterSetWageType = undefined;

/**
 * The wage type cluster set for retro payrun jobs (undefined: all)
 * @member {String} clusterSetWageTypeRetro
 */
Payroll.prototype.clusterSetWageTypeRetro = undefined;

/**
 * The case value cluster set (undefined: none, *: all)
 * @member {String} clusterSetCaseValue
 */
Payroll.prototype.clusterSetCaseValue = undefined;

/**
 * The wage type period result cluster set (undefined: none)
 * @member {String} clusterSetWageTypePeriod
 */
Payroll.prototype.clusterSetWageTypePeriod = undefined;

/**
 * Cluster sets
 * @member {Array.<module:model/ClusterSet>} clusterSets
 */
Payroll.prototype.clusterSets = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
Payroll.prototype.attributes = undefined;

