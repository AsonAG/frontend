/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {CaseDocument} from './CaseDocument';
import {CaseRelationReference} from './CaseRelationReference';
import {ObjectStatus} from './ObjectStatus';
import {ValueType} from './ValueType';

/**
 * The CaseValueSetup model module.
 * @module model/CaseValueSetup
 * @version 1
 */
export class CaseValueSetup {
  /**
   * Constructs a new <code>CaseValueSetup</code>.
   * The payroll case value setup API object (immutable)
   * @alias module:model/CaseValueSetup
   * @class
   * @param caseFieldName {String} The associated case field name
   */
  constructor(caseFieldName) {
    this.caseFieldName = caseFieldName;
  }

  /**
   * Constructs a <code>CaseValueSetup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CaseValueSetup} obj Optional instance to populate.
   * @return {module:model/CaseValueSetup} The populated <code>CaseValueSetup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CaseValueSetup();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('divisionId'))
        obj.divisionId = ApiClient.convertToType(data['divisionId'], 'Number');
      if (data.hasOwnProperty('employeeId'))
        obj.employeeId = ApiClient.convertToType(data['employeeId'], 'Number');
      if (data.hasOwnProperty('caseName'))
        obj.caseName = ApiClient.convertToType(data['caseName'], 'String');
      if (data.hasOwnProperty('caseNameLocalizations'))
        obj.caseNameLocalizations = ApiClient.convertToType(data['caseNameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('caseFieldName'))
        obj.caseFieldName = ApiClient.convertToType(data['caseFieldName'], 'String');
      if (data.hasOwnProperty('caseFieldNameLocalizations'))
        obj.caseFieldNameLocalizations = ApiClient.convertToType(data['caseFieldNameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('caseSlot'))
        obj.caseSlot = ApiClient.convertToType(data['caseSlot'], 'String');
      if (data.hasOwnProperty('caseSlotLocalizations'))
        obj.caseSlotLocalizations = ApiClient.convertToType(data['caseSlotLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('valueType'))
        obj.valueType = ValueType.constructFromObject(data['valueType']);
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
      if (data.hasOwnProperty('numericValue'))
        obj.numericValue = ApiClient.convertToType(data['numericValue'], 'Number');
      if (data.hasOwnProperty('caseRelation'))
        obj.caseRelation = CaseRelationReference.constructFromObject(data['caseRelation']);
      if (data.hasOwnProperty('cancellationDate'))
        obj.cancellationDate = ApiClient.convertToType(data['cancellationDate'], 'Date');
      if (data.hasOwnProperty('start'))
        obj.start = ApiClient.convertToType(data['start'], 'Date');
      if (data.hasOwnProperty('end'))
        obj.end = ApiClient.convertToType(data['end'], 'Date');
      if (data.hasOwnProperty('forecast'))
        obj.forecast = ApiClient.convertToType(data['forecast'], 'String');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
      if (data.hasOwnProperty('documents'))
        obj.documents = ApiClient.convertToType(data['documents'], [CaseDocument]);
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
CaseValueSetup.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
CaseValueSetup.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
CaseValueSetup.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
CaseValueSetup.prototype.updated = undefined;

/**
 * The division id (immutable)  Mandatory for case values with local value scope Ason.Payroll.Api.Model.CaseField.ValueScope
 * @member {Number} divisionId
 */
CaseValueSetup.prototype.divisionId = undefined;

/**
 * The employee id, mandatory for employee case changes
 * @member {Number} employeeId
 */
CaseValueSetup.prototype.employeeId = undefined;

/**
 * The associated case name
 * @member {String} caseName
 */
CaseValueSetup.prototype.caseName = undefined;

/**
 * The localized case names
 * @member {Object.<String, String>} caseNameLocalizations
 */
CaseValueSetup.prototype.caseNameLocalizations = undefined;

/**
 * The associated case field name
 * @member {String} caseFieldName
 */
CaseValueSetup.prototype.caseFieldName = undefined;

/**
 * The localized case field names
 * @member {Object.<String, String>} caseFieldNameLocalizations
 */
CaseValueSetup.prototype.caseFieldNameLocalizations = undefined;

/**
 * The case slot
 * @member {String} caseSlot
 */
CaseValueSetup.prototype.caseSlot = undefined;

/**
 * The localized case slots
 * @member {Object.<String, String>} caseSlotLocalizations
 */
CaseValueSetup.prototype.caseSlotLocalizations = undefined;

/**
 * @member {module:model/ValueType} valueType
 */
CaseValueSetup.prototype.valueType = undefined;

/**
 * The case value (JSON format)
 * @member {String} value
 */
CaseValueSetup.prototype.value = undefined;

/**
 * The case numeric value
 * @member {Number} numericValue
 */
CaseValueSetup.prototype.numericValue = undefined;

/**
 * @member {module:model/CaseRelationReference} caseRelation
 */
CaseValueSetup.prototype.caseRelation = undefined;

/**
 * Cancellation date
 * @member {Date} cancellationDate
 */
CaseValueSetup.prototype.cancellationDate = undefined;

/**
 * The starting date for the value
 * @member {Date} start
 */
CaseValueSetup.prototype.start = undefined;

/**
 * The ending date for the value
 * @member {Date} end
 */
CaseValueSetup.prototype.end = undefined;

/**
 * The forecast name
 * @member {String} forecast
 */
CaseValueSetup.prototype.forecast = undefined;

/**
 * The case value tags
 * @member {Array.<String>} tags
 */
CaseValueSetup.prototype.tags = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
CaseValueSetup.prototype.attributes = undefined;

/**
 * Case documents
 * @member {Array.<module:model/CaseDocument>} documents
 */
CaseValueSetup.prototype.documents = undefined;

