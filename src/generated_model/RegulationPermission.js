/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ObjectStatus} from './ObjectStatus';

/**
 * The RegulationPermission model module.
 * @module model/RegulationPermission
 * @version 1
 */
export class RegulationPermission {
  /**
   * Constructs a new <code>RegulationPermission</code>.
   * The regulation permission API object
   * @alias module:model/RegulationPermission
   * @class
   * @param tenantId {Number} The tenant id
   * @param regulationId {Number} The regulation id
   * @param permissionTenantId {Number} The permission tenant id
   */
  constructor(tenantId, regulationId, permissionTenantId) {
    this.tenantId = tenantId;
    this.regulationId = regulationId;
    this.permissionTenantId = permissionTenantId;
  }

  /**
   * Constructs a <code>RegulationPermission</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RegulationPermission} obj Optional instance to populate.
   * @return {module:model/RegulationPermission} The populated <code>RegulationPermission</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RegulationPermission();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('tenantId'))
        obj.tenantId = ApiClient.convertToType(data['tenantId'], 'Number');
      if (data.hasOwnProperty('regulationId'))
        obj.regulationId = ApiClient.convertToType(data['regulationId'], 'Number');
      if (data.hasOwnProperty('permissionTenantId'))
        obj.permissionTenantId = ApiClient.convertToType(data['permissionTenantId'], 'Number');
      if (data.hasOwnProperty('permissionDivisionId'))
        obj.permissionDivisionId = ApiClient.convertToType(data['permissionDivisionId'], 'Number');
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
RegulationPermission.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
RegulationPermission.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
RegulationPermission.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
RegulationPermission.prototype.updated = undefined;

/**
 * The tenant id
 * @member {Number} tenantId
 */
RegulationPermission.prototype.tenantId = undefined;

/**
 * The regulation id
 * @member {Number} regulationId
 */
RegulationPermission.prototype.regulationId = undefined;

/**
 * The permission tenant id
 * @member {Number} permissionTenantId
 */
RegulationPermission.prototype.permissionTenantId = undefined;

/**
 * The permission division id
 * @member {Number} permissionDivisionId
 */
RegulationPermission.prototype.permissionDivisionId = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
RegulationPermission.prototype.attributes = undefined;

