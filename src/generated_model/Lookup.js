/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {ObjectStatus} from './ObjectStatus';
import {OverrideType} from './OverrideType';

/**
 * The Lookup model module.
 * @module model/Lookup
 * @version 1
 */
export class Lookup {
  /**
   * Constructs a new <code>Lookup</code>.
   * The regulation lookup API object identified by his unique name.  The lookup contains one or more columns and the ValueColumn indicates  the column with the resulting value. ValueType specifies the type of the resulting value.
   * @alias module:model/Lookup
   * @class
   * @param name {String} The unique lookup name (immutable)
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>Lookup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Lookup} obj Optional instance to populate.
   * @return {module:model/Lookup} The populated <code>Lookup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Lookup();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('nameLocalizations'))
        obj.nameLocalizations = ApiClient.convertToType(data['nameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('descriptionLocalizations'))
        obj.descriptionLocalizations = ApiClient.convertToType(data['descriptionLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('overrideType'))
        obj.overrideType = OverrideType.constructFromObject(data['overrideType']);
      if (data.hasOwnProperty('rangeSize'))
        obj.rangeSize = ApiClient.convertToType(data['rangeSize'], 'Number');
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
Lookup.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
Lookup.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
Lookup.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
Lookup.prototype.updated = undefined;

/**
 * The unique lookup name (immutable)
 * @member {String} name
 */
Lookup.prototype.name = undefined;

/**
 * The localized lookup names
 * @member {Object.<String, String>} nameLocalizations
 */
Lookup.prototype.nameLocalizations = undefined;

/**
 * The lookup description
 * @member {String} description
 */
Lookup.prototype.description = undefined;

/**
 * The localized lookup descriptions
 * @member {Object.<String, String>} descriptionLocalizations
 */
Lookup.prototype.descriptionLocalizations = undefined;

/**
 * @member {module:model/OverrideType} overrideType
 */
Lookup.prototype.overrideType = undefined;

/**
 * The lookup range size
 * @member {Number} rangeSize
 */
Lookup.prototype.rangeSize = undefined;

