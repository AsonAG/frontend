/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {LogLevel} from './LogLevel';
import {ObjectStatus} from './ObjectStatus';

/**
 * The Log model module.
 * @module model/Log
 * @version 1
 */
export class Log {
  /**
   * Constructs a new <code>Log</code>.
   * The log API object
   * @alias module:model/Log
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Log</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Log} obj Optional instance to populate.
   * @return {module:model/Log} The populated <code>Log</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Log();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('level'))
        obj.level = LogLevel.constructFromObject(data['level']);
      if (data.hasOwnProperty('message'))
        obj.message = ApiClient.convertToType(data['message'], 'String');
      if (data.hasOwnProperty('user'))
        obj.user = ApiClient.convertToType(data['user'], 'String');
      if (data.hasOwnProperty('error'))
        obj.error = ApiClient.convertToType(data['error'], 'String');
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
      if (data.hasOwnProperty('owner'))
        obj.owner = ApiClient.convertToType(data['owner'], 'String');
      if (data.hasOwnProperty('ownerType'))
        obj.ownerType = ApiClient.convertToType(data['ownerType'], 'String');
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
Log.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
Log.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
Log.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
Log.prototype.updated = undefined;

/**
 * @member {module:model/LogLevel} level
 */
Log.prototype.level = undefined;

/**
 * The log message name (immutable)
 * @member {String} message
 */
Log.prototype.message = undefined;

/**
 * The log user (immutable)
 * @member {String} user
 */
Log.prototype.user = undefined;

/**
 * The log error (immutable)
 * @member {String} error
 */
Log.prototype.error = undefined;

/**
 * The log comment (immutable)
 * @member {String} comment
 */
Log.prototype.comment = undefined;

/**
 * The log owner (immutable)
 * @member {String} owner
 */
Log.prototype.owner = undefined;

/**
 * The log owner type (immutable)
 * @member {String} ownerType
 */
Log.prototype.ownerType = undefined;

