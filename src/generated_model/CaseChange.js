/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {CaseCancellationType} from './CaseCancellationType';
import {CaseValue} from './CaseValue';
import {ObjectStatus} from './ObjectStatus';

/**
 * The CaseChange model module.
 * @module model/CaseChange
 * @version 1
 */
export class CaseChange {
  /**
   * Constructs a new <code>CaseChange</code>.
   * Case change with multiple case values of one case type
   * @alias module:model/CaseChange
   * @class
   * @param userId {Number} The change user id
   */
  constructor(userId) {
    this.userId = userId;
  }

  /**
   * Constructs a <code>CaseChange</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CaseChange} obj Optional instance to populate.
   * @return {module:model/CaseChange} The populated <code>CaseChange</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CaseChange();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'Number');
      if (data.hasOwnProperty('employeeId'))
        obj.employeeId = ApiClient.convertToType(data['employeeId'], 'Number');
      if (data.hasOwnProperty('divisionId'))
        obj.divisionId = ApiClient.convertToType(data['divisionId'], 'Number');
      if (data.hasOwnProperty('cancellationType'))
        obj.cancellationType = CaseCancellationType.constructFromObject(data['cancellationType']);
      if (data.hasOwnProperty('cancellationId'))
        obj.cancellationId = ApiClient.convertToType(data['cancellationId'], 'Number');
      if (data.hasOwnProperty('cancellationDate'))
        obj.cancellationDate = ApiClient.convertToType(data['cancellationDate'], 'Date');
      if (data.hasOwnProperty('reason'))
        obj.reason = ApiClient.convertToType(data['reason'], 'String');
      if (data.hasOwnProperty('validationCaseName'))
        obj.validationCaseName = ApiClient.convertToType(data['validationCaseName'], 'String');
      if (data.hasOwnProperty('forecast'))
        obj.forecast = ApiClient.convertToType(data['forecast'], 'String');
      if (data.hasOwnProperty('values'))
        obj.values = ApiClient.convertToType(data['values'], [CaseValue]);
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
CaseChange.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
CaseChange.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
CaseChange.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
CaseChange.prototype.updated = undefined;

/**
 * The change user id
 * @member {Number} userId
 */
CaseChange.prototype.userId = undefined;

/**
 * The employee id, mandatory for employee case changes (immutable)
 * @member {Number} employeeId
 */
CaseChange.prototype.employeeId = undefined;

/**
 * The division id (immutable)  If present, this values overrides all case value divisions  Ason.Payroll.Api.Model.CaseValue.DivisionId
 * @member {Number} divisionId
 */
CaseChange.prototype.divisionId = undefined;

/**
 * @member {module:model/CaseCancellationType} cancellationType
 */
CaseChange.prototype.cancellationType = undefined;

/**
 * The cancellation case id (immutable)
 * @member {Number} cancellationId
 */
CaseChange.prototype.cancellationId = undefined;

/**
 * The cancellation date (immutable)
 * @member {Date} cancellationDate
 */
CaseChange.prototype.cancellationDate = undefined;

/**
 * The change reason
 * @member {String} reason
 */
CaseChange.prototype.reason = undefined;

/**
 * The validation case name, triggers the case validation (optional)
 * @member {String} validationCaseName
 */
CaseChange.prototype.validationCaseName = undefined;

/**
 * The forecast name
 * @member {String} forecast
 */
CaseChange.prototype.forecast = undefined;

/**
 * The case values
 * @member {Array.<module:model/CaseValue>} values
 */
CaseChange.prototype.values = undefined;

