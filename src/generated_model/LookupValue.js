/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ObjectStatus} from './ObjectStatus';

/**
 * The LookupValue model module.
 * @module model/LookupValue
 * @version 1
 */
export class LookupValue {
  /**
   * Constructs a new <code>LookupValue</code>.
   * Represents a lookup value
   * @alias module:model/LookupValue
   * @class
   * @param key {String} The lookup key, unique within a lookup
   * @param value {String} The lookup value as JSON
   */
  constructor(key, value) {
    this.key = key;
    this.value = value;
  }

  /**
   * Constructs a <code>LookupValue</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LookupValue} obj Optional instance to populate.
   * @return {module:model/LookupValue} The populated <code>LookupValue</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new LookupValue();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
      if (data.hasOwnProperty('valueLocalizations'))
        obj.valueLocalizations = ApiClient.convertToType(data['valueLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('rangeValue'))
        obj.rangeValue = ApiClient.convertToType(data['rangeValue'], 'Number');
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
LookupValue.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
LookupValue.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
LookupValue.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
LookupValue.prototype.updated = undefined;

/**
 * The lookup key, unique within a lookup
 * @member {String} key
 */
LookupValue.prototype.key = undefined;

/**
 * The lookup value as JSON
 * @member {String} value
 */
LookupValue.prototype.value = undefined;

/**
 * The localized lookup values
 * @member {Object.<String, String>} valueLocalizations
 */
LookupValue.prototype.valueLocalizations = undefined;

/**
 * The lookup range value, unique within a lookup
 * @member {Number} rangeValue
 */
LookupValue.prototype.rangeValue = undefined;

