/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {CaseFieldCancellationMode} from './CaseFieldCancellationMode';
import {CaseFieldDateType} from './CaseFieldDateType';
import {CaseFieldTimeType} from './CaseFieldTimeType';
import {CaseFieldTimeUnit} from './CaseFieldTimeUnit';
import {CaseValueCreationMode} from './CaseValueCreationMode';
import {LookupSettings} from './LookupSettings';
import {ObjectStatus} from './ObjectStatus';
import {OverrideType} from './OverrideType';
import {ValueScope} from './ValueScope';
import {ValueType} from './ValueType';

/**
 * The CaseFieldSet model module.
 * @module model/CaseFieldSet
 * @version 1
 */
export class CaseFieldSet {
  /**
   * Constructs a new <code>CaseFieldSet</code>.
   * The case field including the slot and values
   * @alias module:model/CaseFieldSet
   * @class
   * @param name {String} The case field name (immutable)
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>CaseFieldSet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CaseFieldSet} obj Optional instance to populate.
   * @return {module:model/CaseFieldSet} The populated <code>CaseFieldSet</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CaseFieldSet();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('nameLocalizations'))
        obj.nameLocalizations = ApiClient.convertToType(data['nameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('descriptionLocalizations'))
        obj.descriptionLocalizations = ApiClient.convertToType(data['descriptionLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('valueType'))
        obj.valueType = ValueType.constructFromObject(data['valueType']);
      if (data.hasOwnProperty('valueScope'))
        obj.valueScope = ValueScope.constructFromObject(data['valueScope']);
      if (data.hasOwnProperty('timeType'))
        obj.timeType = CaseFieldTimeType.constructFromObject(data['timeType']);
      if (data.hasOwnProperty('timeUnit'))
        obj.timeUnit = CaseFieldTimeUnit.constructFromObject(data['timeUnit']);
      if (data.hasOwnProperty('overrideType'))
        obj.overrideType = OverrideType.constructFromObject(data['overrideType']);
      if (data.hasOwnProperty('cancellationMode'))
        obj.cancellationMode = CaseFieldCancellationMode.constructFromObject(data['cancellationMode']);
      if (data.hasOwnProperty('valueCreationMode'))
        obj.valueCreationMode = CaseValueCreationMode.constructFromObject(data['valueCreationMode']);
      if (data.hasOwnProperty('optional'))
        obj.optional = ApiClient.convertToType(data['optional'], 'Boolean');
      if (data.hasOwnProperty('order'))
        obj.order = ApiClient.convertToType(data['order'], 'Number');
      if (data.hasOwnProperty('startDateType'))
        obj.startDateType = CaseFieldDateType.constructFromObject(data['startDateType']);
      if (data.hasOwnProperty('endDateType'))
        obj.endDateType = CaseFieldDateType.constructFromObject(data['endDateType']);
      if (data.hasOwnProperty('endMandatory'))
        obj.endMandatory = ApiClient.convertToType(data['endMandatory'], 'Boolean');
      if (data.hasOwnProperty('defaultStart'))
        obj.defaultStart = ApiClient.convertToType(data['defaultStart'], 'String');
      if (data.hasOwnProperty('defaultEnd'))
        obj.defaultEnd = ApiClient.convertToType(data['defaultEnd'], 'String');
      if (data.hasOwnProperty('defaultValue'))
        obj.defaultValue = ApiClient.convertToType(data['defaultValue'], 'String');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
      if (data.hasOwnProperty('valueTags'))
        obj.valueTags = ApiClient.convertToType(data['valueTags'], ['String']);
      if (data.hasOwnProperty('lookupSettings'))
        obj.lookupSettings = LookupSettings.constructFromObject(data['lookupSettings']);
      if (data.hasOwnProperty('clusters'))
        obj.clusters = ApiClient.convertToType(data['clusters'], ['String']);
      if (data.hasOwnProperty('buildActions'))
        obj.buildActions = ApiClient.convertToType(data['buildActions'], ['String']);
      if (data.hasOwnProperty('validateActions'))
        obj.validateActions = ApiClient.convertToType(data['validateActions'], ['String']);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
      if (data.hasOwnProperty('valueAttributes'))
        obj.valueAttributes = ApiClient.convertToType(data['valueAttributes'], {'String': Object});
      if (data.hasOwnProperty('displayName'))
        obj.displayName = ApiClient.convertToType(data['displayName'], 'String');
      if (data.hasOwnProperty('caseSlot'))
        obj.caseSlot = ApiClient.convertToType(data['caseSlot'], 'String');
      if (data.hasOwnProperty('caseSlotLocalizations'))
        obj.caseSlotLocalizations = ApiClient.convertToType(data['caseSlotLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
      if (data.hasOwnProperty('start'))
        obj.start = ApiClient.convertToType(data['start'], 'Date');
      if (data.hasOwnProperty('end'))
        obj.end = ApiClient.convertToType(data['end'], 'Date');
      if (data.hasOwnProperty('cancellationDate'))
        obj.cancellationDate = ApiClient.convertToType(data['cancellationDate'], 'Date');
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
CaseFieldSet.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
CaseFieldSet.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
CaseFieldSet.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
CaseFieldSet.prototype.updated = undefined;

/**
 * The case field name (immutable)
 * @member {String} name
 */
CaseFieldSet.prototype.name = undefined;

/**
 * The localized case field names
 * @member {Object.<String, String>} nameLocalizations
 */
CaseFieldSet.prototype.nameLocalizations = undefined;

/**
 * The case field description
 * @member {String} description
 */
CaseFieldSet.prototype.description = undefined;

/**
 * The localized case field descriptions
 * @member {Object.<String, String>} descriptionLocalizations
 */
CaseFieldSet.prototype.descriptionLocalizations = undefined;

/**
 * @member {module:model/ValueType} valueType
 */
CaseFieldSet.prototype.valueType = undefined;

/**
 * @member {module:model/ValueScope} valueScope
 */
CaseFieldSet.prototype.valueScope = undefined;

/**
 * @member {module:model/CaseFieldTimeType} timeType
 */
CaseFieldSet.prototype.timeType = undefined;

/**
 * @member {module:model/CaseFieldTimeUnit} timeUnit
 */
CaseFieldSet.prototype.timeUnit = undefined;

/**
 * @member {module:model/OverrideType} overrideType
 */
CaseFieldSet.prototype.overrideType = undefined;

/**
 * @member {module:model/CaseFieldCancellationMode} cancellationMode
 */
CaseFieldSet.prototype.cancellationMode = undefined;

/**
 * @member {module:model/CaseValueCreationMode} valueCreationMode
 */
CaseFieldSet.prototype.valueCreationMode = undefined;

/**
 * Optional case field
 * @member {Boolean} optional
 */
CaseFieldSet.prototype.optional = undefined;

/**
 * The case field order
 * @member {Number} order
 */
CaseFieldSet.prototype.order = undefined;

/**
 * @member {module:model/CaseFieldDateType} startDateType
 */
CaseFieldSet.prototype.startDateType = undefined;

/**
 * @member {module:model/CaseFieldDateType} endDateType
 */
CaseFieldSet.prototype.endDateType = undefined;

/**
 * The end date mandatory state
 * @member {Boolean} endMandatory
 */
CaseFieldSet.prototype.endMandatory = undefined;

/**
 * The default start value of the case field (date or expression)
 * @member {String} defaultStart
 */
CaseFieldSet.prototype.defaultStart = undefined;

/**
 * The default end value of the case field (date or expression)
 * @member {String} defaultEnd
 */
CaseFieldSet.prototype.defaultEnd = undefined;

/**
 * The default value of the case field (JSON format)
 * @member {String} defaultValue
 */
CaseFieldSet.prototype.defaultValue = undefined;

/**
 * The case field tags
 * @member {Array.<String>} tags
 */
CaseFieldSet.prototype.tags = undefined;

/**
 * The case field tags
 * @member {Array.<String>} valueTags
 */
CaseFieldSet.prototype.valueTags = undefined;

/**
 * @member {module:model/LookupSettings} lookupSettings
 */
CaseFieldSet.prototype.lookupSettings = undefined;

/**
 * The case field clusters
 * @member {Array.<String>} clusters
 */
CaseFieldSet.prototype.clusters = undefined;

/**
 * The case field build actions
 * @member {Array.<String>} buildActions
 */
CaseFieldSet.prototype.buildActions = undefined;

/**
 * The case field validate actions
 * @member {Array.<String>} validateActions
 */
CaseFieldSet.prototype.validateActions = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
CaseFieldSet.prototype.attributes = undefined;

/**
 * Custom value attributes
 * @member {Object.<String, Object>} valueAttributes
 */
CaseFieldSet.prototype.valueAttributes = undefined;

/**
 * The case field display name
 * @member {String} displayName
 */
CaseFieldSet.prototype.displayName = undefined;

/**
 * The case slot
 * @member {String} caseSlot
 */
CaseFieldSet.prototype.caseSlot = undefined;

/**
 * The localized case slots
 * @member {Object.<String, String>} caseSlotLocalizations
 */
CaseFieldSet.prototype.caseSlotLocalizations = undefined;

/**
 * The case value (JSON format)
 * @member {String} value
 */
CaseFieldSet.prototype.value = undefined;

/**
 * The starting date for the value
 * @member {Date} start
 */
CaseFieldSet.prototype.start = undefined;

/**
 * The ending date for the value
 * @member {Date} end
 */
CaseFieldSet.prototype.end = undefined;

/**
 * Cancellation date
 * @member {Date} cancellationDate
 */
CaseFieldSet.prototype.cancellationDate = undefined;

