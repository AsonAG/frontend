/*
 * Ason Payroll Integration API v1
 * Integration API for the system provider [<a target=\"_blank\" href='https://ason.ch'>v0.3.0-pre-230213</a>]
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../api/ApiClient';
import {ObjectStatus} from './ObjectStatus';
import {OverrideType} from './OverrideType';

/**
 * The CaseRelation model module.
 * @module model/CaseRelation
 * @version 1
 */
export class CaseRelation {
  /**
   * Constructs a new <code>CaseRelation</code>.
   * The regulation case relation API object
   * @alias module:model/CaseRelation
   * @class
   * @param sourceCaseName {String} The relation source case name (immutable)
   * @param targetCaseName {String} The relation target case name (immutable)
   */
  constructor(sourceCaseName, targetCaseName) {
    this.sourceCaseName = sourceCaseName;
    this.targetCaseName = targetCaseName;
  }

  /**
   * Constructs a <code>CaseRelation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CaseRelation} obj Optional instance to populate.
   * @return {module:model/CaseRelation} The populated <code>CaseRelation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CaseRelation();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ObjectStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
      if (data.hasOwnProperty('sourceCaseName'))
        obj.sourceCaseName = ApiClient.convertToType(data['sourceCaseName'], 'String');
      if (data.hasOwnProperty('sourceCaseNameLocalizations'))
        obj.sourceCaseNameLocalizations = ApiClient.convertToType(data['sourceCaseNameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('sourceCaseSlot'))
        obj.sourceCaseSlot = ApiClient.convertToType(data['sourceCaseSlot'], 'String');
      if (data.hasOwnProperty('sourceCaseSlotLocalizations'))
        obj.sourceCaseSlotLocalizations = ApiClient.convertToType(data['sourceCaseSlotLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('targetCaseName'))
        obj.targetCaseName = ApiClient.convertToType(data['targetCaseName'], 'String');
      if (data.hasOwnProperty('targetCaseNameLocalizations'))
        obj.targetCaseNameLocalizations = ApiClient.convertToType(data['targetCaseNameLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('targetCaseSlot'))
        obj.targetCaseSlot = ApiClient.convertToType(data['targetCaseSlot'], 'String');
      if (data.hasOwnProperty('targetCaseSlotLocalizations'))
        obj.targetCaseSlotLocalizations = ApiClient.convertToType(data['targetCaseSlotLocalizations'], {'String': 'String'});
      if (data.hasOwnProperty('buildExpression'))
        obj.buildExpression = ApiClient.convertToType(data['buildExpression'], 'String');
      if (data.hasOwnProperty('validateExpression'))
        obj.validateExpression = ApiClient.convertToType(data['validateExpression'], 'String');
      if (data.hasOwnProperty('overrideType'))
        obj.overrideType = OverrideType.constructFromObject(data['overrideType']);
      if (data.hasOwnProperty('order'))
        obj.order = ApiClient.convertToType(data['order'], 'Number');
      if (data.hasOwnProperty('buildActions'))
        obj.buildActions = ApiClient.convertToType(data['buildActions'], ['String']);
      if (data.hasOwnProperty('validateActions'))
        obj.validateActions = ApiClient.convertToType(data['validateActions'], ['String']);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = ApiClient.convertToType(data['attributes'], {'String': Object});
      if (data.hasOwnProperty('clusters'))
        obj.clusters = ApiClient.convertToType(data['clusters'], ['String']);
    }
    return obj;
  }
}

/**
 * The unique object id (immutable)
 * @member {Number} id
 */
CaseRelation.prototype.id = undefined;

/**
 * @member {module:model/ObjectStatus} status
 */
CaseRelation.prototype.status = undefined;

/**
 * The date which the API object was created (immutable)
 * @member {Date} created
 */
CaseRelation.prototype.created = undefined;

/**
 * The date which the API object was last updated (immutable)
 * @member {Date} updated
 */
CaseRelation.prototype.updated = undefined;

/**
 * The relation source case name (immutable)
 * @member {String} sourceCaseName
 */
CaseRelation.prototype.sourceCaseName = undefined;

/**
 * The localized source case names
 * @member {Object.<String, String>} sourceCaseNameLocalizations
 */
CaseRelation.prototype.sourceCaseNameLocalizations = undefined;

/**
 * The relation source case slot
 * @member {String} sourceCaseSlot
 */
CaseRelation.prototype.sourceCaseSlot = undefined;

/**
 * The localized source case slots
 * @member {Object.<String, String>} sourceCaseSlotLocalizations
 */
CaseRelation.prototype.sourceCaseSlotLocalizations = undefined;

/**
 * The relation target case name (immutable)
 * @member {String} targetCaseName
 */
CaseRelation.prototype.targetCaseName = undefined;

/**
 * The localized target case names
 * @member {Object.<String, String>} targetCaseNameLocalizations
 */
CaseRelation.prototype.targetCaseNameLocalizations = undefined;

/**
 * The relation target case slot
 * @member {String} targetCaseSlot
 */
CaseRelation.prototype.targetCaseSlot = undefined;

/**
 * The localized target case slots
 * @member {Object.<String, String>} targetCaseSlotLocalizations
 */
CaseRelation.prototype.targetCaseSlotLocalizations = undefined;

/**
 * The expression used to build the case relation
 * @member {String} buildExpression
 */
CaseRelation.prototype.buildExpression = undefined;

/**
 * The expression which evaluates if the case relation is valid
 * @member {String} validateExpression
 */
CaseRelation.prototype.validateExpression = undefined;

/**
 * @member {module:model/OverrideType} overrideType
 */
CaseRelation.prototype.overrideType = undefined;

/**
 * The case relation order
 * @member {Number} order
 */
CaseRelation.prototype.order = undefined;

/**
 * The case relation build actions
 * @member {Array.<String>} buildActions
 */
CaseRelation.prototype.buildActions = undefined;

/**
 * The case relation validate actions
 * @member {Array.<String>} validateActions
 */
CaseRelation.prototype.validateActions = undefined;

/**
 * Custom attributes
 * @member {Object.<String, Object>} attributes
 */
CaseRelation.prototype.attributes = undefined;

/**
 * The case relation clusters
 * @member {Array.<String>} clusters
 */
CaseRelation.prototype.clusters = undefined;

